#!/bin/bash
# Compare directories, delete identical files.
#
# Given two directories, source and dest, will recursively compare files
# (with `diff`), deleting identical files in source.
# Useful if trying to move files from source to dest and e.g. read error
# caused move to fail, meaning even files that with no error were not
# deleted.

function usage() {
  echo "Usage: $(basename $0) --keep <KEEP> --rm <DEL>"
  echo
  echo 'Use this script to safely (recursively) delete a folder of duplicate'
  echo 'files.'
  echo
  echo '<KEEP> is the folder that should be kept, and <DEL> is the folder that'
  echo 'should be deleted.  For each file, `safe-delete` is called to safely'
  echo 'deduplicate it; once a folder in <DEL> is empty, it is removed with'
  echo '`rmdir`.  Exits early on error.'
}

while true
do
  case "$1" in
    --keep)
      shift
      dest="$1"
      shift
      ;;
    --rm)
      shift
      source="$1"
      shift
      ;;
    --help|-h|help)
      usage
      exit 0
      ;;
    *)
      [ "$1" == '' ] && break

      echo "Error, unrecognized argument '$1'"
      echo 'Remember to prefix files with --keep and --rm'
      echo 'Do --help for usage.'
      exit 1
      ;;
  esac
done

echo 'Preparing to compare files before deleting.'
echo "Source is '${source}', destination is '${dest}'."
echo -n 'If a file exists in both places, and the files match, then '
echo "the file in ${source} will be DELETED!"
echo 'To confirm and execute, type "yes" below.'

read -p 'Confirm? ' answer

if [ "$answer" != 'yes' ]
then
  echo 'Answer wrong, aborting!'
  exit 1
fi

function diff-delete-on-dir() {
  local relative_path="$1"
  local source_root=''
  local dest_root=''
  if [ "$relative_path" == '' ]
  then
    source_root="${source}"
    dest_root="${dest}"
  else
    source_root="${source}/${relative_path}"
    dest_root="${dest}/${relative_path}"
    relative_path="${relative_path}/"
  fi

  ls -A "$source_root" | while IFS='' read item
  do
    filename="${relative_path}${item}"
    if [ -f "${source_root}/${item}" ] || [ -L "${source_root}/${item}" ]
    then
      safe-delete --keep "${dest}/${filename}" --rm "${source}/${filename}" || exit $?
    elif [ -d "${source_root}/${item}" ]
    then
      diff-delete-on-dir "${filename}" || exit $?
    else
      echo 'Got an unknown type for item: '
      ls -l "${source_root}/${item}"
      exit 3
    fi
  done

  if [ -z "$(ls -A "$source_root")" ] && [ -d "${dest_root}" ]
  then
    rmdir --verbose "${source_root}"
  fi
}

diff-delete-on-dir

exit 0
