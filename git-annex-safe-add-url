#!/bin/bash
# Attach URL to existing git-annex file, or download new.
# Copyright (C) 2019 Scott Weldon

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# TODO: verify tmpdir, should be outside repo

tmpdir=$(pwd)

repo="$1"
url="$2"

wget "$url"

if [ $? -ne 0 ]
then
  echo 'Error: initial download failed.'
  exit 1
fi

local_file="$(ls)"

pushd "$repo" >/dev/null
output=$(git annex import --clean-duplicates --json "$tmpdir/$local_file")
popd >/dev/null

if [ -f "$local_file" ]
then
  # No duplicate found, so this is a new file.
  cd "$repo"
  git annex addurl "$url" || exit $?
  git annex import --clean-duplicates "$tmpdir/$local_file"
else
  # File deduplicated, so it exists in annex.
  sha_name=$(echo "$output" | jq --raw-output '.note' | sed 's/duplicate of //')
  cd "$repo"
  repo_root="$(git root)"
  git_obj_path=$(find "$repo_root" -name "$sha_name" | grep "$sha_name/$sha_name" | sed 's@.*\.git/@\.git/@')
  # Stat output looks like (with quotes):
  # '/path/to/link/name' -> '/path/to/link/target'
  existing=$(find "$repo_root" -type l | xargs stat -c '%N' | grep "$git_obj_path" | sed "s@'\(.*\)' -> '.*@\1@")
  git annex addurl "$url" --file "$existing"
fi

echo 'Done.'
