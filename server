#!/bin/bash
# Generic server admin script
# Copyright (C) 2013-2015 Scott Weldon

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This script is to make it easier to manage multiple servers. For now, the
# mcserver script is separate because that still has some unique needs. May
# eventually refactor to reference this one.

function usage() {
  echo "Usage: server <server> [command]"
  echo
  echo "<server> is the name of the server you wish to work with."
  echo
  echo "Commands:"
  echo "  mosh"
  echo "  ssh"
  echo "  ssh-tor"
  echo "  up <local file> <remote file>"
  echo "  down <remote file> <local file>"
  echo "  cmd <remote command>"
  echo "  ping"
  echo
  exit 1
}

server="$1"

if [ "$server" == "" ]
then
  usage
fi

validArgs=("ip" "user" "port" "id" "moshports")

source loadconf "$HOME/.scott_script/server" "$server.cfg" validArgs[@]

if [ "$ip" == "" ]
then
  echo "The server \"$server\" does not exist or is improperly configured!"
  exit 2
fi

if [ "$user" == "" ]
then
  user="$USER"
fi

if [ "$port" == "" ]
then
  port="22"
fi

if [ "$id" == "" ]
then
  id="$HOME/.ssh/id_rsa"
fi

args="-p $port -i $id"

case "$2" in
  "mosh")
    if [ "$moshports" == "" ]
    then
      mosh --ssh="ssh $args" $user@$ip --predict=always
    else
      mosh -p $moshports --ssh="ssh $args" $user@$ip --predict=always
    fi
    ;;
  "ssh")
    ssh $user@$ip $args
    ;;
  "ssh-tor")
    safeip=`tor-resolve $ip`
    ssh -l $user@$safeip -o ProxyCommand="/usr/bin/connect -4 -S localhost:9050 %h %p" $user@$safeip $args
    ;;
  "trace")
    traceroute $ip
    ;;
  "up")
    scp -r -P $port -i $id "$3" $user@$ip:$4
    ;;
  "down")
    scp -r -P $port -i $id "$user@$ip:$3" "$4"
    ;;
  "cmd")
    shift; shift;
    ssh $user@$ip $args $@
    ;;
  "ping")
    ping $ip
    ;;
  "sync-dry")
    export RSYNC_RSH="ssh $args"
    options="--recursive --verbose --compress --times --checksum --omit-dir-times"
    rsync --dry-run $options "$3" "$4"
    ;;
  "sync")
    export RSYNC_RSH="ssh $args"
    options="--recursive --verbose --compress --times --checksum --omit-dir-times"
    rsync $options "$3" "$4"
    ;;
  "diff")
    diff --suppress-common-lines -wy $3 <(ssh $user@$ip $args "cat $4")
    ;;
  *)
    usage
    ;;
esac
